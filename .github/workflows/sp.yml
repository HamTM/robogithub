name: Compile with SourceMod

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sm-version: [ '1.10.x']
        # sm-version: [ '1.10.x', '1.10.6528', '1.11.x', '1.11.6467', '>= 1.11.6478']

    name: SM version ${{ matrix.sm-version }}
    steps:
      - uses: actions/checkout@v2

      - name: Set environment variables
        run: echo SCRIPTS_PATH=$(pwd) >> $GITHUB_ENV

      - name: create folders
        run: |
          mkdir -p "./lib-include/stocksoup/tf/"
        working-directory: ${{ env.SCRIPTS_PATH }}

      - name: Setup SourcePawn Compiler ${{ matrix.SM_VERSION }}
        id: Setup_SourcePawn
        uses: rumblefrog/setup-sp@master
        with:
          version: ${{ matrix.sm-version }}
          version-file: ./berobot_handler.sp
          define-name: PLUGIN_VERSION
      - name: diag for Setup_SourcePawn
        run: |
          echo outputs = ${{ join(steps.Setup_SourcePawn.outputs.*, ', ') }}
          echo version = ${{ steps.Setup_SourcePawn.outputs.version }}
          echo plugin-version = ${{ steps.Setup_SourcePawn.outputs.plugin-version }}
        working-directory: ${{ env.SCRIPTS_PATH }}

      # Dependecies
      - uses: eisbaer66/spm@v0.1.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Compile
      - name: Compile plugins
        run: |
          mkdir plugins
          for file in *.sp;
          do
            if [[ $file == "joke"* ]]; then
                echo "skipping " $file
                continue;
            fi
            if [[ $file == *"dont_compile"* ]]; then
                echo "skipping " $file
                continue;
            fi
            if [[ $file == *"don_compile"* ]]; then
                echo "skipping " $file
                continue;
            fi
            if [[ $file == *"test"* ]]; then
                echo "skipping " $file
                continue;
            fi
            echo -e "\nCompiling $file..."
            spcomp -O2 -v2 -i include -i lib-include -o "plugins/$(basename -- "$file" .sp).smx" $file
          done
          echo "===OUT FILES==="
          ls
          echo "===PLUGINS FILES==="
          cd plugins
          ls
          echo "===VERSIONS==="
          echo version = ${{ steps.Setup_SourcePawn.outputs.version }}
          echo plugin-version = ${{ steps.Setup_SourcePawn.outputs.plugin-version }}
        working-directory: ${{ env.SCRIPTS_PATH }}